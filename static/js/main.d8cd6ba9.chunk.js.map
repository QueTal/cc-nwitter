{"version":3,"sources":["fbase.js","components/AuthForm.js","routes/Auth.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","components/Navigation.js","routes/Profile.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","data","signInWithEmailAndPassword","console","log","message","className","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","icon","faTwitter","color","size","style","marginBottom","faGoogle","faGithub","Nweet","nweetObj","isOwner","editing","setEditing","text","newNweet","setNewNweet","onDeleteClick","window","confirm","doc","id","delete","attachmentUrl","refFromURL","toggleEditing","update","autoFocus","src","class","faTrash","faPencilAlt","NweetFactory","userObj","nweet","setNweet","attachment","setAttachment","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","createdAt","Date","now","creatorId","collection","add","maxLength","for","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","opacity","backgroundImage","faTimes","Home","nweets","setNweets","useEffect","onSnapshot","snapshot","nweetArray","docs","map","marginTop","Navigation","display","justifyContent","to","marginRight","marginLeft","flexDirection","alignItems","fontSize","faUser","displayName","refreshUser","newDisplayName","setNewDisplayName","history","useHistory","updateProfile","signOut","push","AppRouter","isLoggedIn","maxWidth","width","margin","exact","path","Profile","App","init","setInit","setIsLoggedIn","setUserObj","onAuthStateChanged","user","args","currentUser","getFullYear","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d8cd6ba9.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nimport \"firebase/storage\";\n\nconst firebaseConfig = {\n    apiKey: process.env.REACT_APP_API_KEY,\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n    projectId: process.env.REACT_APP_PROJECT_ID,\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n    messagingSenderId: process.env.REACT_APP_MESSAGING_ID,\n    appId: process.env.REACT_APP_API_ID\n};\n  // Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\n\nexport const firebaseInstance = firebase;\nexport const authService  = firebase.auth();\nexport const dbService = firebase.firestore();\nexport const storageService = firebase.storage();","import { authService } from \"fbase\";\nimport React, { useState } from \"react\";\n\nconst AuthForm = () => {\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [newAccount, setNewAccount] = useState(true);\n    const [error, setError] = useState(\"\");\n\n    const onChange = (event) => { \n        const {target :{name, value}} = event;\n        if(name === \"email\"){\n            setEmail(value);\n        } else if(name === \"password\"){\n            setPassword(value);\n        }\n    };\n    const onSubmit = async(event) => {\n        event.preventDefault();\n        try {\n            let data;\n            if(newAccount){\n                // crate account\n                data = await authService.createUserWithEmailAndPassword(email, password);\n            } else{\n                // login\n                data = await authService.signInWithEmailAndPassword(email, password);\n            }    \n            console.log(data);\n        } catch (error) {\n            setError(error.message);\n        }\n        \n    };\n\n    const toggleAccount = () => setNewAccount((prev) => !prev);\n    return (\n        <>\n            <form onSubmit={onSubmit} className=\"container\">\n                <input name = \"email\" type=\"email\" placeholder=\"Email\" required value = {email} onChange={onChange} className=\"authInput\"/>\n                <input name = \"password\" type=\"password\" placeholder=\"Password\" required value = {password} onChange={onChange} className=\"authInput\"/>\n                <input type=\"submit\" className=\"authInput authSubmit\" value={newAccount? \"Create Account\" : \"Log In\"} />\n                {error && <span className=\"authError\">{error}</span>}\n            </form>\n            <span onClick={toggleAccount} className=\"authSwitch\">{newAccount? \"Sign In\" : \"Create Account\"}</span>\n        </>\n    )\n}\nexport default AuthForm;","import AuthForm from \"components/AuthForm\";\nimport { authService, firebaseInstance} from \"fbase\";\nimport React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faTwitter,\n  faGoogle,\n  faGithub,\n} from \"@fortawesome/free-brands-svg-icons\";\n\n// function component\n// import automatically\nconst Auth = () => {\n    const onSocialClick = async (event) => {\n        const {target:{name}} = event;\n        let provider;\n\n        if(name === \"google\"){\n            provider = new firebaseInstance.auth.GoogleAuthProvider();\n        } else if(name === \"github\"){\n            provider = new firebaseInstance.auth.GithubAuthProvider();\n        }\n        await authService.signInWithPopup(provider);\n    }\n    return (\n        <div className=\"authContainer\">\n        <FontAwesomeIcon\n            icon={faTwitter}\n            color={\"#04AAFF\"}\n            size=\"3x\"\n            style={{ marginBottom: 30 }}\n        />\n            <AuthForm />\n            <div className=\"authBtns\">\n                <button onClick={onSocialClick} name=\"google\" className=\"authBtn\">\n                    Continue with Google <FontAwesomeIcon icon={faGoogle} />\n                </button>\n                <button onClick={onSocialClick} name=\"github\" className=\"authBtn\">\n                    Continue with Github <FontAwesomeIcon icon={faGithub} />\n                </button>\n            </div>\n        </div>\n    );\n}\nexport default Auth;","import { dbService, storageService } from \"fbase\";\nimport React, { useState } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Nweet = ({nweetObj, isOwner}) => {\n    // editing mode or not\n    const [editing, setEditing] = useState(false);\n    const [newNweet, setNewNweet] = useState(nweetObj.text);\n    const onDeleteClick = async () => {\n        const ok = window.confirm(\"Are you sure you want to delete this nweet?\");\n        if(ok){\n            // delete nweet\n            await dbService.doc(`nweets/${nweetObj.id}`).delete();\n            if(nweetObj.attachmentUrl !== \"\") await storageService.refFromURL(nweetObj.attachmentUrl).delete();\n        }\n    }\n    const toggleEditing = () => setEditing((prev)=>!prev);\n    const onSubmit = async (event) => {\n        event.preventDefault();\n        await dbService.doc(`nweets/${nweetObj.id}`).update({text:newNweet});\n        setEditing(false);\n    }\n    const onChange = (event) =>{\n        const {target:{value}, }= event;\n        setNewNweet(value); \n    }\n    return (\n        <div className=\"nweet\">\n            {\n                editing ? (\n                <>\n                    <form onSubmit={onSubmit} className=\"container nweetEdit\">\n                        <input type=\"text\" placeholder=\"Edit your nweet\"  value={newNweet} required autoFocus onChange={onChange} className=\"formInput\" />\n                        <input type=\"submit\" value=\"Update Nweet\" className=\"formBtn\"/>\n                    </form> \n                    <span onClick={toggleEditing} className=\"formBtn cancelBtn\">\n                        Cancel\n                    </span>\n                </>\n                ) : ( \n                    <>\n                        <h4>{nweetObj.text}</h4>\n                        {nweetObj.attachmentUrl && <img src={nweetObj.attachmentUrl} /> } \n                        { isOwner && (\n                            <div class=\"nweet__actions\">\n                                <span onClick={onDeleteClick}>\n                                    <FontAwesomeIcon icon={faTrash} />\n                                </span>\n                                <span onClick={toggleEditing}>\n                                    <FontAwesomeIcon icon={faPencilAlt} />\n                                </span>\n                            </div>\n                        )}\n                    </>\n                )\n            }\n        </div>\n    );\n}\nexport default Nweet;\n","import { dbService, storageService } from \"fbase\";\nimport React, { useState } from \"react\";\nimport {v4 as uuidv4} from \"uuid\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\n\nconst NweetFactory = ({userObj}) => {\n    const [nweet, setNweet] = useState(\"\");\n    const [attachment, setAttachment] = useState(\"\");\n\n    const onSubmit = async (event) =>{\n        if (nweet === \"\") {\n            return;\n        }\n        event.preventDefault();\n        let attachmentUrl = \"\";\n        if (attachment !== \"\") {\n            const attachmentRef = storageService.ref().child(`${userObj.uid}/${uuidv4()}`);\n            const response = await attachmentRef.putString(attachment, \"data_url\");\n            attachmentUrl = await response.ref.getDownloadURL();\n        }\n        const nweetObj = {\n            text: nweet,\n            createdAt: Date.now(),\n            creatorId: userObj.uid,\n            attachmentUrl\n        }\n        await dbService.collection(\"nweets\").add(nweetObj);\n        setNweet(\"\");\n        setAttachment(\"\");\n    };\n\n    const onChange = (event) => {\n        const {target:{value}} = event;\n        setNweet(value);\n    };\n\n    const onFileChange = (event) => {\n        const {target:{files}} = event;\n        const theFile = files[0];\n        const reader = new FileReader();\n        \n        reader.onloadend = (finishedEvent) => {\n            const {currentTarget:{result}} = finishedEvent;\n            setAttachment(result);\n        }; \n        if(theFile) {reader.readAsDataURL(theFile); }\n    }\n\n    const onClearAttachment = () => setAttachment(\"\");\n\n    return (\n        <form onSubmit={onSubmit} className=\"factoryForm\">\n            <div className=\"factoryInput__container\">\n                <input className=\"factoryInput__input\" value={nweet} onChange={onChange} type=\"text\" placeholder=\"What's on your mind?\" maxLength={120} />\n                <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\n            </div>\n            <label for=\"attach-file\" className=\"factoryInput__label\">\n                <span>Add photos</span>\n                <FontAwesomeIcon icon={faPlus} />\n            </label>\n            <input id=\"attach-file\" type=\"file\" accept=\"image/*\" onChange={onFileChange} style={{ opacity: 0 }} />\n            {attachment && (\n                <div className=\"factoryForm__attachment\">\n                    <img src={attachment}  style={{backgroundImage: attachment}} />\n                    <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\n                        <span>Remove</span>\n                        <FontAwesomeIcon icon={faTimes} />\n                    </div>\n                </div>\n            )}\n    </form>\n    )\n}\nexport default NweetFactory;","import Nweet from \"components/Nweet\";\nimport NweetFactory from \"components/NweetFactory\";\nimport { dbService, storageService } from \"fbase\";\nimport React, { useEffect, useState } from \"react\";\n\n// function component\nconst Home = ({userObj}) => {\n    const [nweets, setNweets] = useState([]);\n    \n    useEffect(()=>{\n        dbService.collection(\"nweets\").onSnapshot((snapshot) => {\n            const nweetArray = snapshot.docs.map(doc => ({\n                id: doc.id,\n                ...doc.data(),\n            }))\n            setNweets(nweetArray);\n        });\n    }, []);\n\n    return(\n        <div className=\"container\">\n            <NweetFactory userObj={userObj} />\n            <div style={{ marginTop: 30 }}>\n                {nweets.map((nweet) => (\n                    <Nweet key={nweet.id} nweetObj={nweet} isOwner={nweet.creatorId === userObj.uid}/>\n                ))}\n            </div>\n        </div>\n    );\n}\nexport default Home;","import React from \"react\";\nimport {Link} from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Navigation = ({userObj}) => \n<nav>\n    <ul style={{ display: \"flex\", justifyContent: \"center\", marginTop: 50 }}>\n        <li>\n            <Link to=\"/\" style={{ marginRight: 10 }}>\n                <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"2x\" />\n            </Link>\n        </li>\n        <li>\n        <Link\n            to=\"/profile\"\n            style={{\n                marginLeft: 10,\n                display: \"flex\",\n                flexDirection: \"column\",\n                alignItems: \"center\",\n                fontSize: 12,\n            }}\n        >\n            <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2x\" />\n            <span style={{ marginTop: 10 }}>\n                {userObj.displayName\n                    ? `${userObj.displayName}의 Profile`\n                    : \"Profile\"}\n            </span>\n        </Link>\n        </li>\n    </ul>\n</nav>;\nexport default Navigation; ","import { authService, dbService } from \"fbase\";\nimport React, { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\n// function component\nexport default ({refreshUser, userObj}) => {\n    const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\n    const history = useHistory();\n    const onLogOutClick = () => {\n        authService.signOut();\n        history.push('/');\n    };\n\n    const onChange = (event) => {\n        const {target:{value}} = event;\n        setNewDisplayName (value);\n    };\n    const onSubmit = async (event) => {\n        event.preventDefault();\n        if(userObj.displayName !== newDisplayName){\n            await userObj.updateProfile({\n                displayName: newDisplayName,\n            });\n            refreshUser();\n        }\n    }\n\n    return (\n        <div className=\"container\">\n            <form onSubmit={onSubmit} className=\"profileForm\">\n                <input onChange={onChange} type=\"text\" placeholder=\"Display Name\" autoFocus value={newDisplayName} className=\"formInput\" />\n                <input type=\"submit\" value=\"Update Profile\" className=\"formBtn\" style={{ marginTop: 10, }} />\n            </form>\n            <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\n               Log Out\n            </span>\n        </div>\n    );\n}","import React from 'react';\nimport { HashRouter as Router, Route, Switch }  from 'react-router-dom';\nimport Auth from '../routes/Auth';\nimport Home from '../routes/Home';\nimport Navigation from 'components/Navigation';\nimport Profile from 'routes/Profile';\n\nconst AppRouter = ({refreshUser, isLoggedIn, userObj}) => {\n    return (\n    <Router>\n        {isLoggedIn && <Navigation userObj={userObj} />}\n        <Switch>\n            {isLoggedIn ? ( \n            <div\n            style={{\n                maxWidth: 890,\n                width: \"100%\",\n                margin: \"0 auto\",\n                marginTop: 80,\n                display: \"flex\",\n                justifyContent: \"center\",\n            }}\n            >\n            <Route exact path =\"/\">\n                <Home userObj={userObj} />\n            </Route>\n            <Route exact path =\"/profile\">\n                <Profile userObj={userObj} refreshUser={refreshUser} />\n            </Route>\n            </div> ): ( \n            <Route exact path =\"/\">\n                <Auth />\n            </Route> \n            )}\n        </Switch>\n    </Router>\n    );\n}\nexport default AppRouter;","import React, { useEffect, useState } from \"react\";\nimport AppRouter from \"components/Router\"; \nimport { authService}  from \"fbase\";\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if(user){\n        setIsLoggedIn(true);\n        setUserObj({\n          displayName: user.displayName,\n          uid: user.uid,\n          updateProfile: (args) => user.updateProfile(args),\n        });\n      } else{\n        setIsLoggedIn(false);\n        //setUserObj(null);\n      }\n      setInit(true);\n    })\n  }, [])\n  const refreshUser = () => {\n    //setUserObj({displayName: authService.currentUser.displayName});\n    const user = authService.currentUser;\n    setUserObj({\n      displayName: user.displayName,\n      uid: user.uid,\n      updateProfile: (args) => user.updateProfile(args),\n\n    })\n  }\n  return (<>\n    {init ? <AppRouter refreshUser={refreshUser} isLoggedIn={isLoggedIn} userObj={userObj} /> : \"Initializing....\"} \n    <footer>&copy; Nwitter{new Date().getFullYear()} </footer>\n  </>\n  ); \n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport \"./styles.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}